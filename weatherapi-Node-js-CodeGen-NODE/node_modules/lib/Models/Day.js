/**
 * WeatherAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Day
 */
class Day extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.maxtempC = this.constructor.getValue(obj.maxtempC || obj.maxtemp_c);
        this.maxtempF = this.constructor.getValue(obj.maxtempF || obj.maxtemp_f);
        this.mintempC = this.constructor.getValue(obj.mintempC || obj.mintemp_c);
        this.mintempF = this.constructor.getValue(obj.mintempF || obj.mintemp_f);
        this.avgtempC = this.constructor.getValue(obj.avgtempC || obj.avgtemp_c);
        this.avgtempF = this.constructor.getValue(obj.avgtempF || obj.avgtemp_f);
        this.maxwindMph = this.constructor.getValue(obj.maxwindMph || obj.maxwind_mph);
        this.maxwindKph = this.constructor.getValue(obj.maxwindKph || obj.maxwind_kph);
        this.totalprecipMm = this.constructor.getValue(obj.totalprecipMm || obj.totalprecip_mm);
        this.totalprecipIn = this.constructor.getValue(obj.totalprecipIn || obj.totalprecip_in);
        this.avgvisKm = this.constructor.getValue(obj.avgvisKm || obj.avgvis_km);
        this.avgvisMiles = this.constructor.getValue(obj.avgvisMiles || obj.avgvis_miles);
        this.avghumidity = this.constructor.getValue(obj.avghumidity);
        this.condition = this.constructor.getValue(obj.condition);
        this.uv = this.constructor.getValue(obj.uv);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'maxtempC', realName: 'maxtemp_c' },
            { name: 'maxtempF', realName: 'maxtemp_f' },
            { name: 'mintempC', realName: 'mintemp_c' },
            { name: 'mintempF', realName: 'mintemp_f' },
            { name: 'avgtempC', realName: 'avgtemp_c' },
            { name: 'avgtempF', realName: 'avgtemp_f' },
            { name: 'maxwindMph', realName: 'maxwind_mph' },
            { name: 'maxwindKph', realName: 'maxwind_kph' },
            { name: 'totalprecipMm', realName: 'totalprecip_mm' },
            { name: 'totalprecipIn', realName: 'totalprecip_in' },
            { name: 'avgvisKm', realName: 'avgvis_km' },
            { name: 'avgvisMiles', realName: 'avgvis_miles' },
            { name: 'avghumidity', realName: 'avghumidity' },
            { name: 'condition', realName: 'condition', type: 'Condition' },
            { name: 'uv', realName: 'uv' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Day;
