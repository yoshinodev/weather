/**
 * WeatherAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Hour
 */
class Hour extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.timeEpoch = this.constructor.getValue(obj.timeEpoch || obj.time_epoch);
        this.time = this.constructor.getValue(obj.time);
        this.tempC = this.constructor.getValue(obj.tempC || obj.temp_c);
        this.tempF = this.constructor.getValue(obj.tempF || obj.temp_f);
        this.isDay = this.constructor.getValue(obj.isDay || obj.is_day);
        this.condition = this.constructor.getValue(obj.condition);
        this.windMph = this.constructor.getValue(obj.windMph || obj.wind_mph);
        this.windKph = this.constructor.getValue(obj.windKph || obj.wind_kph);
        this.windDegree = this.constructor.getValue(obj.windDegree || obj.wind_degree);
        this.windDir = this.constructor.getValue(obj.windDir || obj.wind_dir);
        this.pressureMb = this.constructor.getValue(obj.pressureMb || obj.pressure_mb);
        this.pressureIn = this.constructor.getValue(obj.pressureIn || obj.pressure_in);
        this.precipMm = this.constructor.getValue(obj.precipMm || obj.precip_mm);
        this.precipIn = this.constructor.getValue(obj.precipIn || obj.precip_in);
        this.humidity = this.constructor.getValue(obj.humidity);
        this.cloud = this.constructor.getValue(obj.cloud);
        this.feelslikeC = this.constructor.getValue(obj.feelslikeC || obj.feelslike_c);
        this.feelslikeF = this.constructor.getValue(obj.feelslikeF || obj.feelslike_f);
        this.visKm = this.constructor.getValue(obj.visKm || obj.vis_km);
        this.visMiles = this.constructor.getValue(obj.visMiles || obj.vis_miles);
        this.uv = this.constructor.getValue(obj.uv);
        this.gustMph = this.constructor.getValue(obj.gustMph || obj.gust_mph);
        this.gustKph = this.constructor.getValue(obj.gustKph || obj.gust_kph);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'timeEpoch', realName: 'time_epoch' },
            { name: 'time', realName: 'time' },
            { name: 'tempC', realName: 'temp_c' },
            { name: 'tempF', realName: 'temp_f' },
            { name: 'isDay', realName: 'is_day' },
            { name: 'condition', realName: 'condition', type: 'Condition' },
            { name: 'windMph', realName: 'wind_mph' },
            { name: 'windKph', realName: 'wind_kph' },
            { name: 'windDegree', realName: 'wind_degree' },
            { name: 'windDir', realName: 'wind_dir' },
            { name: 'pressureMb', realName: 'pressure_mb' },
            { name: 'pressureIn', realName: 'pressure_in' },
            { name: 'precipMm', realName: 'precip_mm' },
            { name: 'precipIn', realName: 'precip_in' },
            { name: 'humidity', realName: 'humidity' },
            { name: 'cloud', realName: 'cloud' },
            { name: 'feelslikeC', realName: 'feelslike_c' },
            { name: 'feelslikeF', realName: 'feelslike_f' },
            { name: 'visKm', realName: 'vis_km' },
            { name: 'visMiles', realName: 'vis_miles' },
            { name: 'uv', realName: 'uv' },
            { name: 'gustMph', realName: 'gust_mph' },
            { name: 'gustKph', realName: 'gust_kph' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Hour;
